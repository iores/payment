<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">





    <!-- Shiro过滤器 核心-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 身份认证失败，则跳转到登录页面的配置 -->
        <property name="loginUrl" value="/service/login"/>
        <!--登陆成功,跳转的页面-->
        <property name="successUrl" value="/service/gomain"/>
        <!-- 权限认证失败，则跳转到指定页面 -->
        <property name="unauthorizedUrl" value="/403.html"/>
        <!-- Shiro连接约束配置,即过滤链的定义 -->
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="captchaFormAuthenticationFilter"/>
                <entry key="restAuthc" value-ref="restCaptchaFormAuthenticationFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /=anon
                <!--静态资源取消权限-->
                /css/** = anon
                /plugs/** = anon
                /imgs/** = anon
                /image/captcha.html*=anon
                /service/** = restAuthc
                
                /mplogin.html*=authc
                /logout.do*=anon

                # 权限配置示例
                /security/account/view.do=authc,perms[SECURITY_ACCOUNT_VIEW]

                /** = authc
            </value>
        </property>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myShiroRealm"/>
        <property name="sessionManager" ref="sessionManager" />
    </bean>
    <!-- 配置自定义Realm -->
    <bean id="myShiroRealm" class="com.itpay.mp.base.shiro.MyShiroRealm">
        <property name="userLoginAppService" ref="userLoginAppService"/>
        <property name="credentialsMatcher" ref="customCredentialsMatcher"/>
    </bean>

    <bean id="customCredentialsMatcher" class="com.itpay.mp.base.shiro.CustomCredentialsMatcher"/>
    <bean id="lifecycleBeanPostProcessor"  class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean id="captchaFormAuthenticationFilter" class="com.itpay.mp.base.shiro.CaptchaFormAuthenticationFilter"/>
    <bean id="restCaptchaFormAuthenticationFilter" class="com.itpay.mp.base.shiro.RestCaptchaFormAuthenticationFilter"/>
    <!--session 管理器-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="shiroSessionRedisDAO" />

        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <!--<property name="sessionIdCookie" ref="shareSession" />-->

        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000" />

        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
        <property name="deleteInvalidSessions" value="true" />

        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000" />

        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true" />
    </bean>

    <bean id="shiroSessionRedisDAO" class="com.itpay.mp.base.shiro.dao.ShiroSessionRedisDAO">
        <property name="redisCache" ref="sessionRedisCache" />
        <property name="cacheManager" ref="shiroCacheManager"/>
        <!--配置ehcache的名字-->
        <property name="activeSessionsCacheName" value="sessionCache" />
    </bean>

    <!-- ehcahe缓存 -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehcacheManagerFactory" />
    </bean>

</beans>
    